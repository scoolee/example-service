plugins {
	id 'com.github.jmongard.git-semver-plugin' version '0.12.10'
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '7.8.0'
	id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'org.bezkres.scoolee'
version = semver.version

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	runtimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2' // required for Log4j2 YAML configs
	modules {
		module("org.springframework.boot:spring-boot-starter-logging") {
			replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
		}
	}

	testImplementation 'io.rest-assured:rest-assured:5.5.0'
}

openApiGenerate {
	inputSpec = "${rootDir}/src/main/resources/openapi/echo.yaml"
	validateSpec = true
	generatorName = 'spring'
	outputDir = "$rootDir/build/generated/sources/openapi"

	additionalProperties = [
			apiPackage: 'org.bezkres.scoolee.example.api',
			modelPackage: 'org.bezkres.scoolee.example.api.model',
			documentationProvider: 'none',
			reactive: false,
			useTags: true,
			skipDefaultInterface: true,
			hideGenerationTimestamp: true,
			interfaceOnly: true,
			useSpringBoot3: true,
			generateBuilders: true,
			useOptional: true,
			openApiNullable: false,
			useSwaggerUI: false,
	]
}

sourceSets.main.java.srcDir "$rootDir/build/generated/sources/openapi/src/main/java"

tasks.named('compileJava') {
	dependsOn(tasks.openApiGenerate)
}

tasks.named('test') {
	useJUnitPlatform()
}

jib {
	from {
		image = "eclipse-temurin:21"
	}
}