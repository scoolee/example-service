name: Gradle CI

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Semantic release
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: ./gradlew releaseVersion --no-commit

      - name: Build with Gradle
        run: ./gradlew  build

      - name: Push new tag
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: git push origin --tags

      - name: Build docker image
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: |
          version=$(./gradlew -q printVersion)
          ./gradlew jib -Djib.to.auth.username=${{ github.actor }} -Djib.to.auth.password=${{ secrets.GITHUB_TOKEN }} -Djib.to.image=ghcr.io/${{ github.repository }}:$version

      - name: Create GitHub release
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=$(git describe --tags --abbrev=0)
          version=$(./gradlew -q printVersion)
          ./gradlew -q printChangeLog | gh release create $tag -t "Release $version" -F -

      - name: Generate and submit dependency graph
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        uses: gradle/actions/dependency-submission@v4
